plugins {
    id 'org.springframework.boot' version '2.4.0'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "org.asciidoctor.convert" version "1.5.9.2"
    id 'java'
}

group = 'com.moseory'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    snippetsDir = file('build/generated-snippets')
}

asciidoctor {
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // h2
    runtimeOnly 'com.h2database:h2'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // javax validation
    implementation 'javax.validation:validation-api'

    // p6spy (jpa log)
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

    // querydsl
    implementation 'com.querydsl:querydsl-jpa'

    // rest docs
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝